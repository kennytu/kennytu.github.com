<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[江湖險惡，我從來都不輕易留下我的姓名。]]></title>
  <link href="http://kennytu.github.io/atom.xml" rel="self"/>
  <link href="http://kennytu.github.io/"/>
  <updated>2015-11-16T21:29:36+08:00</updated>
  <id>http://kennytu.github.io/</id>
  <author>
    <name><![CDATA[Kenny Tu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Sails練習之一]]></title>
    <link href="http://kennytu.github.io/blog/2015/11/16/sails-study01/"/>
    <updated>2015-11-16T11:29:18+08:00</updated>
    <id>http://kennytu.github.io/blog/2015/11/16/sails-study01</id>
    <content type="html"><![CDATA[<p>這一系列的文章, 出自於youtube上的Building a Sails Application教學.</p>

<p>這位仁兄的一系列教學文章都寫得非常好</p>

<p>他的網址在<a href="https://www.youtube.com/watch?v=ep6EQ5f82Ts&index=2&list=PLWsZeJCry-F4K4iRImeB3-i0S5mw9Ak-W" target="_blank">這邊</a></p>

<p>底下分別是他的各個教學章節, 我只是用文字來記錄我的學習過程</p>

<!--more-->


<h2>Building a Sails Application: Ep1 - Installing Sails and Create Initial Project</h2>

<p>OK, 這個章節主要就是教安裝, 你要先安裝好<code>npm</code>, 接下來都好辦了</p>

<p>安裝sails</p>

<p><code>npm install -g sails</code></p>

<p>指令一下去就裝好了. -g是代表安裝到大家都可以存取到的目錄, npm的共用目錄是放在<code>C:\Users\KennyTu\AppData\Roaming\npm</code></p>

<p>你可以用npm config get prefix來取得global的目錄</p>

<p><code>E:\sails_app&gt;npm config get prefix</code></p>

<p>安裝好sails之後, 就可以用sails來create project</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='batch'><span class='line'>E:\sails_app<span class="p">&gt;</span><span class="n">sails</span> new activeityOverload --linker
</span><span class='line'>info: Created a new Sails app <span class="sb">`activeityOverload`</span>!
</span></code></pre></td></tr></table></div></figure>


<p><code>--linker</code> 的意思是在傳輸的過程啟動壓縮功能, 先讓資料變小, 然後傳輸, 節省網路開銷</p>

<p><strong>但在0.10版本之後, sails就捨棄了linker, 要注意一下</strong></p>

<p>詳情請參考<a href="http://stackoverflow.com/questions/22042260/sails-js-v0-10-create-new-project-linker-not-working-gruntfile-js-not-used" target="_blank">這裡</a></p>

<p>接著啟動sails的serve來看結果</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='batch'><span class='line'>E:\sails_app<span class="p">&gt;</span><span class="n">cd</span> activeityOverload
</span><span class='line'>E:\sails_app\activeityOverload<span class="p">&gt;</span><span class="n">sails</span> lift
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='batch'><span class='line'>info: Starting app...
</span><span class='line'>
</span><span class='line'>info:
</span><span class='line'>info:                .-..-.
</span><span class='line'>info:
</span><span class='line'>info:    Sails              &lt;|    .-..-.
</span><span class='line'>info:    v<span class="m">0</span>.<span class="m">11</span>.<span class="m">2</span>             |\
</span><span class='line'>info:                       <span class="n">/|.\</span>
</span><span class='line'>info:                      / || \
</span><span class='line'>info:                    <span class="p">,</span><span class="s1">&#39;  |&#39;</span>  \
</span><span class='line'>info:                 .-<span class="s1">&#39;.-==|/_--&#39;</span>
</span><span class='line'>info:                 `--<span class="s1">&#39;-------&#39;</span>
</span><span class='line'>info:    __---___--___---___--___---___--___
</span><span class='line'>info:  ____---___--___---___--___---___--___-__
</span><span class='line'>info:
</span><span class='line'>info: Server lifted in <span class="sb">`E:\sails_app\activeityOverload`</span>
</span><span class='line'>info: To see your app<span class="p">,</span> visit http:<span class="n">//localhost:1337</span>
</span><span class='line'>info: To shut down Sails<span class="p">,</span> press <span class="p">&lt;</span><span class="n">CTRL</span>&gt; + C at any time.
</span><span class='line'>
</span><span class='line'>debug: --------------------------------------------------------
</span><span class='line'>debug: <span class="c">:: Mon Nov 16 2015 15:24:06 GMT+0800 (台北標準時間)</span>
</span><span class='line'>
</span><span class='line'>debug: Environment : development
</span><span class='line'>debug: Port        : <span class="m">1337</span>
</span><span class='line'>debug: --------------------------------------------------------
</span></code></pre></td></tr></table></div></figure>


<p>看到以上的訊息之後, 就可以到瀏覽器中輸入 <code>http://localhost:1337</code></p>

<p>就可以看到網頁啦!</p>

<p>好~ 第一課就是這樣囉, 結束</p>

<p>底下是第二課</p>

<h2>Building a Sails Application: Ep2 - Creating a sign-up page, adding twitter bootstrap</h2>

<p>進入到我們剛剛create的資料夾, 也就是activeityOverload, 我們會看到幾個資料夾和檔案</p>

<p>我們先專注在 <code>config/routes.js</code></p>

<p>這個檔案決定使用者個要求如何導向我們設定的資源</p>

<p>詳細的介紹在<a href="http://sailsjs.org/#!/documentation/concepts/Routes/RouteTargetSyntax.html" target="_blank">這邊</a></p>

<p>主要是這個結構</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="p">.</span><span class="nx">routes</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="s1">&#39;/&#39;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">view</span><span class="o">:</span> <span class="s1">&#39;homepage&#39;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>這個是說, 根目錄的頁面是呈現主要是view的hompage檔案</p>

<p>所以我們可以在views的目錄下找到homepage.ejs</p>

<p>EJS 是一個 client 端的 JavaScript template library，可以讓整個網頁程式碼結構更清楚、更整潔。有興趣的人可以參考<a href="http://blogger.gtwang.org/2014/02/ejs-embedded-javascript.html" target="_blank">這裡</a></p>

<p>現在呢, 我們要做以下事情</p>

<ol>
<li>在views下create一個資料夾static</li>
<li>在static資料夾下新增index.ejs</li>
</ol>


<p>在index.ejs新增</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;h1&gt;</span> this is our homepage <span class="nt">&lt;/h1&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>回到<code>config/routes.js</code> 修改我們的首頁的目錄, 如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="p">.</span><span class="nx">routes</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="s1">&#39;/&#39;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">view</span><span class="o">:</span> <span class="s1">&#39;static/index&#39;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>修改完成, 重新啟動sails,</p>

<p><code>sails lift</code></p>

<p>然後到瀏覽器(在這邊我用Firefox)就可以看到結果</p>

<p>在這邊用瀏覽器的觀看原始碼功能, 會看到source code多了很多東西出來</p>

<p>這是因為sails會用layout.ejs (在views底下)</p>

<p>重新幫我們產生出一個頁面出來</p>

<p>為了實驗一下layout.ejs, 我們來修改一下內容</p>

<p>在layout.ejs檔案中, 大約31行開始</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="c">&lt;!--STYLES--&gt;</span>
</span><span class='line'><span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">href=</span><span class="s">&quot;/styles/bootstrap.css&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">href=</span><span class="s">&quot;/styles/importer.css&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="c">&lt;!--STYLES END--&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面那個<code>bootstrap.css</code>是我加的</p>

<p>目的是在於, 我們改用<code>bootstrap.css</code>來重新render(渲染)我們的html元素</p>

<p>也就是我們的<code>index.ejs</code>當中的<code>h2</code>的元素, 會被<code>layout.ejs</code>用<code>bootstrap.css</code>來重新渲染</p>

<p>底下是作法</p>

<ol>
<li>去下載bootstrap, 最新的是bootstrap-3.3.5-dist.zip, 裡面有js, css, fonts</li>
<li>把css下面的bootstrap.css copy 到 sails app 目錄下的 <code>activeityOverload\assets\styles</code></li>
<li>到layout.ejs去新增 styles, 就如同上面的layout.ejs的範例一樣</li>
</ol>


<p>接著就是重新啟動sails, 你會看到首頁的字型變得不太一樣了</p>

<p>在這邊要提到一個目錄, 也就是assets, assets中文是資源的意思, 意思就是你create的任何files都可以放在這個資料夾啦!</p>

<p>當我們把files放到這個assets的目錄時, sails會在啟動的時候, 將底下的檔案copy到要發行的另外一個目錄, 在這邊是<code>.tmp\public\styles</code></p>

<p>OK, 接下來作者就要再次修改主頁了, 修改之前, 他shows出了Gruntfile.js,</p>

<p>看到這邊出現了一個不熟悉的東西, 就上網google了一下</p>

<p>原來grunt是一個前端的建構工具, 他很像C的Make, Java的Ant, Ruby的Rake&hellip;</p>

<p>在前端和Node.js的開發環境中, 就是使用grunt來建置</p>

<p>Grunt是一個Task Runner，常用來執行 JS/CSS 打包壓縮、SASS/LESS/CoffeeScript 編譯、單元測試… 等工作，常被拿來當成前端開發自動化的引擎。</p>

<p>上網study了一下, 發現(2015年)出現了一個比Grunt更好用的Tool, 叫作Gulp</p>

<p>可能作者在出這個教學影片的時候, 還沒有Gulp, 所以就用了Grunt.</p>

<p>但既然已經有了Gulp, 我就來用Gulp來取代Grunt吧(以後啦!)</p>

<p>Sails的官網有教學, 如何把Grunt給DISABLE掉&hellip;請參考<a href="http://sailsjs.org/documentation/concepts/assets/disabling-grunt" target="_blank">官方網站</a></p>

<p>一些gulp的教學文件我列在底下</p>

<p><a href="http://www.oxxostudio.tw/articles/201503/gulp-install-webserver.html" target="_blank">Gulp 學習 1</a></p>

<p><a href="http://www.jianshu.com/p/3779f708f5d7" target="_blank">Gulp 挑戰 Grunt，背後的哲學 </a></p>

<p><a href="http://blog.darkthread.net/post-2014-09-25-gulp-grunt-bower-npm.aspx" target="_blank">Gulp, Grunt, Bower 以及 npm</a></p>

<p><a href="http://koanda.de/blog/53b9a67acba90doc1636380824-How-to-disable-Grunt-in-Sails-js" target="_blank">How to disable Grunt in Sails.js</a></p>

<p>好, 現在繼續, 在這邊有個小插曲</p>

<p>作者忘記把JQuery以及一些相關的檔案加進來, 他額外寫了一個blog, 參考
<a href="https://www.youtube.com/watch?v=zootilxmo4M" target="_blank">Building a Sails Application: Ep2a - adding jquery, custom.less, minor footer changes</a></p>

<p>底下是步驟</p>

<ol>
<li>先把JQuery下載下來, 我下載的是<a href="http://jquery.com/download/" target="_blank">The compressed, production jQuery 2.1.4</a></li>
<li>把jquery-2.1.4.min.js 改名成jquery.js, 放到assets\js\dependencies底下</li>
<li>到task\底下,找到<code>pipeline.js</code> (新的Sails把Grunt關於inject的部份放到tasks裡面的<code>pipeline.js</code>), 參考<a href="http://sailsjs.org/documentation/concepts/assets/task-automation" target="_blank">這裡</a></li>
<li>本來我們要把jquery放到pipeline.js, 結果發現pipeline.js已經幫我們處理好了</li>
</ol>


<p>從程式碼當中可以看到</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Client-side javascript files to inject in order</span>
</span><span class='line'><span class="c1">// (uses Grunt-style wildcard/glob/splat expressions)</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">jsFilesToInject</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Load sails.io before everything else</span>
</span><span class='line'>  <span class="s1">&#39;js/dependencies/sails.io.js&#39;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Dependencies like jQuery, or Angular are brought in here</span>
</span><span class='line'>  <span class="s1">&#39;js/dependencies/**/*.js&#39;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// All of the rest of your client-side js files</span>
</span><span class='line'>  <span class="c1">// will be injected here in no particular order.</span>
</span><span class='line'>  <span class="s1">&#39;js/**/*.js&#39;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Use the &quot;exclude&quot; operator to ignore files</span>
</span><span class='line'>  <span class="c1">// &#39;!js/ignore/these/files/*.js&#39;</span>
</span><span class='line'><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>OK, 所以我們就不用修改, 把jquery放到正確的目錄就好</p>

<p>接著新增<code>custom.less</code>
參考下面的內容, 放到<code>assets\styles</code>中</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nt">body</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">padding-top</span><span class="o">:</span> <span class="m">60px</span><span class="p">;</span>
</span><span class='line'>  <span class="k">padding-bottom</span><span class="o">:</span> <span class="m">40px</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nc">.jumbotron</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">text-align</span><span class="o">:</span> <span class="k">center</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nc">.jumbotron</span> <span class="nt">h2</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">font-size</span><span class="o">:</span> <span class="m">1.5em</span><span class="p">;</span>
</span><span class='line'>  <span class="k">letter-spacing</span><span class="o">:</span> <span class="m">-1px</span><span class="p">;</span>
</span><span class='line'>  <span class="k">margin-bottom</span><span class="o">:</span> <span class="m">30px</span><span class="p">;</span>
</span><span class='line'>  <span class="k">text-align</span><span class="o">:</span> <span class="k">center</span><span class="p">;</span>
</span><span class='line'>  <span class="k">font-weight</span><span class="o">:</span> <span class="k">normal</span><span class="p">;</span>
</span><span class='line'>  <span class="k">color</span><span class="o">:</span> <span class="nb">gray</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nc">.container</span> <span class="nc">.gray</span><span class="p">{</span>
</span><span class='line'>  <span class="k">color</span><span class="o">:</span> <span class="nb">gray</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nc">.container</span><span class="p">{</span>
</span><span class='line'>  <span class="o">.</span><span class="n">footer</span><span class="err">{</span>
</span><span class='line'>    <span class="k">width</span><span class="o">:</span> <span class="m">25%</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="err">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>接著, 我們修改importer.less, 新增<code>@import 'custom.less';</code> 如下表</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="o">//</span> <span class="nt">For</span> <span class="nt">example</span><span class="o">:</span>
</span><span class='line'><span class="o">//</span>
</span><span class='line'><span class="o">//</span> <span class="k">@import</span> <span class="s1">&#39;variables/colors.less&#39;</span><span class="p">;</span>
</span><span class='line'><span class="o">//</span> <span class="k">@import</span> <span class="s1">&#39;mixins/foo.less&#39;</span><span class="p">;</span>
</span><span class='line'><span class="o">//</span> <span class="k">@import</span> <span class="s1">&#39;mixins/bar.less&#39;</span><span class="p">;</span>
</span><span class='line'><span class="o">//</span> <span class="k">@import</span> <span class="s1">&#39;mixins/baz.less&#39;</span><span class="p">;</span>
</span><span class='line'><span class="o">//</span>
</span><span class='line'><span class="o">//</span> <span class="k">@import</span> <span class="s1">&#39;styleguide.less&#39;</span><span class="p">;</span>
</span><span class='line'><span class="o">//</span> <span class="k">@import</span> <span class="s1">&#39;pages/login.less&#39;</span><span class="p">;</span>
</span><span class='line'><span class="o">//</span> <span class="k">@import</span> <span class="s1">&#39;pages/signup.less&#39;</span><span class="p">;</span>
</span><span class='line'><span class="o">//</span>
</span><span class='line'><span class="o">//</span> <span class="nt">etc</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="k">@import</span> <span class="s1">&#39;custom.less&#39;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>PS: 我剛剛把custom.less放到assets\styles中的時候, layout.ejs好像就會幫我把custom.css自動加到STYLE裡面去.. 超強的&hellip; 還是我自己之前有改過我忘記了&hellip; XD</p>

<p>作者有在layout.ejs新增了一些屬性, <code>navbar</code>以及<code>footer</code></p>

<p>相關程式碼我寫在下面</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;navbar navbar-inverse navbar-fixed-top&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;container&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">&quot;navbar-brand&quot;</span> <span class="na">href=</span><span class="s">&quot;/&quot;</span><span class="nt">&gt;</span> activityOverload<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">&lt;</span>%- body %&gt;
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;container&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;hr&gt;</span>
</span><span class='line'>    <span class="nt">&lt;footer</span> <span class="na">class=</span><span class="s">&quot;footer pull-right&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;div&gt;</span>
</span><span class='line'>        <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://sailsja.com&quot;</span><span class="nt">&gt;</span>sails.js<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>        <span class="nt">&lt;div&gt;</span>Tutorial by irl nathan...<span class="nt">&lt;/div&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/footer&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中 &lt;%- body %> 上面的code是navbar, 下面的是footer</p>

<p>好的, 總之大功告成啦</p>

<p>現在要回頭修改index.ejs了</p>

<p>內容如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;container&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;jumbotron&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;h1&gt;</span>activityOverload<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;h2&gt;</span>...tracking app activity better than the NSA since 1899.<span class="nt">&lt;/h2&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;text-center&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;/user/new&quot;</span> <span class="na">style=</span><span class="s">&quot;text-align:center&quot;</span> <span class="na">class=</span><span class="s">&quot;btn btn-lg btn-success&quot;</span><span class="nt">&gt;</span>Sign up now!<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中如果照著youtube上面寫的, button不會置中, 所以我就加了<code>div class="text-center"</code> 讓button置中, 我們使用的class是bootstrap的class, 請參考<a href="http://stackoverflow.com/questions/22578853/how-to-center-buttons-in-twitter-bootstrap-3" target="_balnk">這裡</a></p>

<p>好, 以上就是教學影片的第一課以及第二課, 附上網址</p>

<ol>
<li><a href="https://www.youtube.com/watch?v=1H0UfbGdwd8&list=PLWsZeJCry-F4K4iRImeB3-i0S5mw9Ak-W&index=1" target="_blank">activityOverlord - An overview of the project</a></li>
<li><a href="https://www.youtube.com/watch?v=ep6EQ5f82Ts&list=PLWsZeJCry-F4K4iRImeB3-i0S5mw9Ak-W&index=2" target="_blank">Building a Sails Application: Ep1 - Installing Sails and Create Initial Project</a></li>
<li><a href="http://irlnathan.github.io/sailscasts/blog/2013/08/22/building-a-sails-application-ep2a-a-quick-supplement-to-some-stuff-i-forgot-to-mention-in-episode-2/" target="_blank">Building a Sails Application: Ep2a - Stuff I Forgot to Mention in Episode two&hellip;because I&rsquo;m Old.</a></li>
<li><a href="https://www.youtube.com/watch?v=ZE7ye2G_H9Q&list=PLWsZeJCry-F4K4iRImeB3-i0S5mw9Ak-W&index=3" target="_blank">Building a Sails Application: Ep2 - Creating a sign-up page, adding twitter bootstrap</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress的進階技巧]]></title>
    <link href="http://kennytu.github.io/blog/2015/11/12/octopress-advance/"/>
    <updated>2015-11-12T20:06:58+08:00</updated>
    <id>http://kennytu.github.io/blog/2015/11/12/octopress-advance</id>
    <content type="html"><![CDATA[<p>這篇Blog我記錄了一些我在網路上找到的資料, 很多分享, 也滿受用的</p>

<p>我整理在底下, 內容有</p>

<ol>
<li>進階的安裝文章分享</li>
<li>多台電腦上寫作同步</li>
<li>加上分類雲</li>
<li>程式碼高亮</li>
<li>imgcap的使用</li>
</ol>


<!--more-->


<h2>Octopress一些進階的安裝文章分享</h2>

<ol>
<li><a href="https://wwssllabcd.github.io/blog/2012/08/01/how-to-install-octopress-on-window/" target="_blank"> Octopress 安裝教學、心得筆記 (Windows)</a>

<ul>
<li>提到如何分類, 以及分類模組安裝</li>
</ul>
</li>
<li><a href="http://shengmingzhiqing.com/blog/octopress-lean-modification-1.html/" target="_blank"> Octopress 精益修改 (1) </a>

<ul>
<li>一些進階的應用</li>
</ul>
</li>
</ol>


<h2>Octopress 重新安裝或者在多台電腦上寫作同步</h2>

<p>主要是參考這篇 <a href="http://ju.outofmemory.cn/entry/119189" target="_blank"> Set up Octopress environment on another computer </a></p>

<p>簡單描述如下</p>

<ol>
<li><p>先將github上存放blog的repo, clone到本地端的octopress來, 注意clone的branch是source branch</p>

<pre><code> git clone -b source git@github.com:kennytu/kennytu.github.com.git octopress
</code></pre></li>
<li><p>接下來進入octopress, 將master branch的文件cloen到_deploy</p>

<pre><code> cd octopress
 git clone git@github.com:kennytu/kennytu.github.com.git _deploy
</code></pre></li>
</ol>


<p>不用加-b的選項, 預設就會是master</p>

<p>接著執行以下指令, 要在octopress目錄下</p>

<pre><code>    gem install bundler
    bundle install
</code></pre>

<p>這樣就可以了</p>

<p>PS: 注意不要使用rake install 默認主題，不然會把自定義的主題恢復到默認狀態</p>

<p>最後, 在octopress目錄下, 執行</p>

<pre><code>cd octopress
git pull origin source  
cd ./_deploy
git pull origin master 
</code></pre>

<p>OK, 大功告成</p>

<h2>替octopress加上分類列表(分類雲)</h2>

<p>參考 <a href="https://github.com/tokkonopapa/octopress-tagcloud" target="_blank"> octopress-tagcloud</a></p>

<ol>
<li>右下方點選Download zip</li>
<li>解壓縮到octopress相同目錄下, 覆蓋相同資料夾(不用擔心其他檔案會不見)</li>
<li><p>修改<code>_config.yml</code>, 找到 <code>default_asides</code>, 加入 <strong>custom/asides/category_list.html</strong> 這個項目到List當中, 如下</p>

<pre><code> default_asides: [custom/asides/category_list.html, ...]
</code></pre></li>
<li><p>執行<code>rake generate</code></p></li>
</ol>


<p>在文章的分類部分, 有下列幾個分法</p>

<p>單一分類
categories: abc</p>

<p>多重分類: 使用LIST</p>

<pre><code>categories: [aaa, bbb, ccc]
</code></pre>

<p>多重分類: 使用 <strong>-</strong></p>

<pre><code>categories:
- aaa
- bbb
- ccc
</code></pre>

<h2>程式碼高亮語法</h2>

<p>參考 <a href="http://octopress.org/docs/blogging/code/" target="_blank"> Sharing Code Snippets </a></p>

<p>這個功能需要安裝Python</p>

<figure class='code'><figcaption><span>Discover if a number is prime</span><a href='http://www.noulakaz.net/weblog/2007/03/18/a-regular-expression-to-check-for-prime-numbers/'>點擊查看</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Fixnum</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">prime?</span>
</span><span class='line'>    <span class="p">(</span><span class="s1">&#39;1&#39;</span> <span class="o">*</span> <span class="nb">self</span><span class="p">)</span> <span class="o">!~</span> <span class="sr">/^1?$|^(11+?)\1+$/</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>語法是 三個``` [language] [title] [url] [link text]</p>

<pre><code>``` ruby Discover if a number is prime http://www.noulakaz.net/weblog/2007/03/18/a-regular-expression-to-check-for-prime-numbers/ 點擊查看

class Fixnum

  def prime?

    ('1' * self) !~ /^1?$|^(11+?)\1+$/

  end

end

```
</code></pre>

<h2>連結圖片</h2>

<p>參考 <a href="http://blog.zerosharp.com/image-captions-for-octopress/" target="_blank"> Image Captions for Octopress </a></p>

<p>將相對應的程式碼修改一下, 就可以使用imgcap的語法, 例如</p>

<p>{ % imgcap /images/dog.jpg 看三小朋友 % }</p>

<p>就可以在圖片底下加上說明</p>

<p>若圖檔在本地端, 只要將圖檔放在source底下的images目錄, 然後引用就可以了</p>

<p>效果如下</p>

<p><span class='caption-wrapper'><img class='caption' src='http://kennytu.github.io/images/ttt.jpg' width='' height='' title='看三小朋友'><span class='caption-text'>看三小朋友</span></span></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在Windows 7系統安裝 Octopress]]></title>
    <link href="http://kennytu.github.io/blog/2015/11/11/init-blog/"/>
    <updated>2015-11-11T19:53:26+08:00</updated>
    <id>http://kennytu.github.io/blog/2015/11/11/init-blog</id>
    <content type="html"><![CDATA[<p>好的, 事出有因, 源自我看到滿多人都開始使用github寫Blog, 我也開始有這個想法</p>

<p>但因為手頭上的作業系統是win7, 想順手來試試看, 但卻遭遇了不少困難</p>

<p>最後花了不少時間終於把Octopress弄到我的Github上面, 在此記錄了一下我的安裝經驗</p>

<!--more-->


<h2>下載基本需要安裝的套件</h2>

<ol>
<li><p><a href="https://git-scm.com/download/win" target="_blank">Git Client for Win7 64 bits</a></p></li>
<li><p><a href="http://rubyinstaller.org/downloads/" target="_blank">RubyInstaller for Win7 64 bits</a></p>

<p> 檔案位於 RubyInstaller 分類, 有一個Ruby 2.2.3 (x64), 點它下載</p></li>
<li><p><a href="http://rubyinstaller.org/downloads/" target="_blank">Ruby DEVELOPMENT KITfor Win7 64 bits</a></p>

<p> 檔案位於 DEVELOPMENT KIT 分類, 選擇 For use with Ruby 2.0 and above (x64 - 64bits only)</p></li>
<li><p><a href="http://www.activestate.com/activepython/downloads" target="_blank">Python 2.7.X</a></p>

<p> 我在這邊選擇的Python是ActiveState公司出品的Free Version, 這個版本包含很多好用的Python Plugin</p></li>
</ol>


<h2>開始安裝套件</h2>

<p>基本上, 安裝git client沒有什麼難度, 但有一些細節要注意, 例如你想直接用ssh和GitHub連線, 那就要作一些設定, 我將安裝git ssh的設定寫在另外一篇, 請參考 (巴拉巴拉)</p>

<p>安裝完git之後, 開啟<code>cmd</code>,輸入<code>git --version</code>, 應該會有版本號碼出現</p>

<p>接著安裝RubuyInstaller, 點選安裝檔案, 然後一直按Next Next..Install就可以裝完了, 要記得勾選 Add Ruby excutables to your PATH, 如下圖</p>

<p><span class='caption-wrapper'><img class='caption' src='http://kennytu.github.io/images/cotopress_install/ruby01.jpg' width='' height='' title='請全部都勾選吧'><span class='caption-text'>請全部都勾選吧</span></span></p>

<p>安裝完成之後, 開啟你的cmd, 輸入 <code>ruby --version</code>, 看看有沒有什麼東西印出來</p>

<p>如果出現類似command not found.. 請關閉cmd再重新開啟一個(讓cmd重新讀取環境變數)</p>

<p>若在沒有, 那就是你一定沒有在安裝的時候勾選設定PATH.</p>

<p>除此之外, 安裝Ruby的過程不會出現什麼奇怪的現象了, 如果有, 請在下方留言 (但現在沒有留言版給你留言&hellip; :P)</p>

<p>若要進一步看Ruby是否設定進去環境變數,</p>

<p>在<code>cmd</code>中輸入<code>set</code>, 看是否有出現這一行</p>

<p><code>PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.RB;.RBW</code></p>

<p>上面最後有出現.RB, .RBW, 那就是了 (不知道你是否懷疑Ruby沒有設定進PATH, 但卻可以執行?)</p>

<p>我想PATHEXT就是解答之一</p>

<p>安裝完成之後, 接下來一定要<strong>緊接著</strong>安裝<strong>RUBY DEVELOPMENT KIT</strong> (超!重!要!)</p>

<p>RUBY DEV KIT是一個自我解壓縮包, 請解壓縮到C:\RubyDevKit</p>

<p>然後執行</p>

<pre><code>C:\RubyDevKit&gt;ruby dk.rb init
    [INFO] found RubyInstaller v2.2.3 at C:/Ruby22-x64
    Initialization complete! Please review and modify the auto-generated
    'config.yml' file to ensure it contains the root directories to all
    of the installed Rubies you want enhanced by the DevKit.
C:\RubyDevKit&gt;ruby dk.rb install
    [INFO] Updating convenience notice gem override for 'C:/Ruby22-x64'
    [INFO] Installing 'C:/Ruby22-x64/lib/ruby/site_ruby/devkit.rb'
</code></pre>

<p>基本上應該要沒什麼問題, 有問題請到<a href="https://github.com/oneclick/rubyinstaller/wiki/Development-Kit" target="_blank">Ruby DEVELOPMENT Github</a> 尋求專業解答</p>

<p>好的, 安裝完RubyDevKit之後, 最後把Python裝一裝, 這個沒什麼難度, 要注意就是勾選<strong>把Python加入環境變數Path</strong></p>

<p>以上就是基本套件安裝</p>

<h2>開始著手進行Octopress的安裝</h2>

<p>接下來, 在你想要安裝的目錄下面, 開啟CMD</p>

<p><strong>這邊要切記, 要使用Administrator開啟CMD</strong></p>

<p>執行以下指令, 例如我是在D:\kenny_blog</p>

<pre><code>D:\kenny_blog&gt;git clone git://github.com/imathis/octopress.git octopress
</code></pre>

<p>注意, 我們要從octopress這個github clone下來到我們的一個新的目錄叫做 octopress</p>

<p>接下來, <code>cd</code>進去<code>octopress</code>的目錄</p>

<pre><code>D:\kenny_blog&gt;cd octopress
D:\kenny_blog\octopress&gt;gem install bundler
D:\kenny_blog\octopress&gt;bundle install
D:\kenny_blog\octopress&gt;rake install
</code></pre>

<p>底下是我的詳細的執行過程</p>

<pre><code>D:\kenny_blog\octopress&gt;gem install bundler
    Fetching: bundler-1.10.6.gem (100%)
    Successfully installed bundler-1.10.6
    Parsing documentation for bundler-1.10.6
    Installing ri documentation for bundler-1.10.6
    Done installing documentation for bundler after 4 seconds
    1 gem installed

D:\kenny_blog\octopress&gt;bundle install
    Fetching gem metadata from https://rubygems.org/...........
    Fetching version metadata from https://rubygems.org/...
    Fetching dependency metadata from https://rubygems.org/..
    Resolving dependencies...
    Using rake 10.4.2
    Installing RedCloth 4.2.9 with native extensions
    Installing blankslate 2.1.2.4
    Installing chunky_png 1.3.5
    Installing fast-stemmer 1.0.2 with native extensions
    Installing classifier-reborn 2.0.4
    Installing coffee-script-source 1.9.1.1
    Installing execjs 2.6.0
    Installing coffee-script 2.4.1
    Installing colorator 0.1
    Installing multi_json 1.11.2
    Installing sass 3.4.19
    Installing compass-core 1.0.3
    Installing compass-import-once 1.0.5
    Installing rb-fsevent 0.9.6
    Installing ffi 1.9.10
    Installing rb-inotify 0.9.5
    Installing compass 1.0.3
    Installing tilt 2.0.1
    Installing haml 4.0.7
    Installing jekyll-coffeescript 1.0.1
    Installing jekyll-gist 1.3.5
    Installing jekyll-paginate 1.1.0
    Installing jekyll-sass-converter 1.3.0
    Installing listen 3.0.4
    Installing jekyll-watch 1.3.0
    Installing kramdown 1.9.0
    Installing liquid 2.6.3
    Installing mercenary 0.3.5
    Installing posix-spawn 0.3.11 with native extensions
    Installing yajl-ruby 1.2.1 with native extensions
    Installing pygments.rb 0.6.3
    Installing redcarpet 3.3.3 with native extensions
    Installing safe_yaml 1.0.4
    Installing parslet 1.5.0
    Installing toml 0.1.2
    Installing jekyll 2.5.3
    Installing jekyll-sitemap 0.9.0
    Installing octopress-hooks 2.6.1
    Installing octopress-date-format 2.0.2
    Installing rack 1.6.4
    Installing rack-protection 1.5.3
    Installing rdiscount 2.1.8 with native extensions
    Installing sass-globbing 1.0.0
    Installing sinatra 1.4.6
    Installing stringex 1.4.0
    Using bundler 1.10.6
    Bundle complete! 13 Gemfile dependencies, 47 gems now installed.
    Use `bundle show [gemname]` to see where a bundled gem is installed.
    Post-install message from compass:
        Compass is charityware. If you love it, please donate on our behalf at http:
    //umdf.org/compass Thanks!
    Post-install message from haml:

    HEADS UP! Haml 4.0 has many improvements, but also has changes that may break
    your application:

    * Support for Ruby 1.8.6 dropped
    * Support for Rails 2 dropped
    * Sass filter now always outputs &lt;style&gt; tags
    * Data attributes are now hyphenated, not underscored
    * html2haml utility moved to the html2haml gem
    * Textile and Maruku filters moved to the haml-contrib gem

    For more info see:

    http://rubydoc.info/github/haml/haml/file/CHANGELOG.md

D:\kenny_blog\octopress&gt;rake install
    //cmd will open new window to run below 
    ## Copying classic theme into ./source and ./sass
    mkdir -p source
    cp -r .themes/classic/source/. source
    mkdir -p sass
    cp -r .themes/classic/sass/. sass
    mkdir -p source/_posts
    mkdir -p public
</code></pre>

<p>OK, 大功告成, 若沒有順利到這邊</p>

<p>底下列出幾個你會在bundle install遇到的問題</p>

<ul>
<li><p>若你沒有先安裝RubyDevKit, 就執行<code>bundle install</code>, 你應該會遇到底下的問題</p>

<pre><code>  Bundler::GemspecError: Could not read gem at C:/Ruby22-x64/lib/ruby/gems/2.2.0/c
  ache/RedCloth-4.2.9.gem. It may be corrupted.
  An error occurred while installing RedCloth (4.2.9), and Bundler cannot
  continue.
  Make sure that `gem install RedCloth -v '4.2.9'` succeeds before bundling.****
</code></pre>

<p>請記得回去安裝RubyDevKit</p></li>
<li><p>若你安裝了RubyDevKit還是遇到相同的問題, 請記得清空Cache, 因為上述的錯誤提示你說Could not read gem at&hellip;, 請到<code>C:/Ruby22-x64/lib/ruby/gems/2.2.0/cache</code> 底下, 把看到的東西全部都刪除, 這個時候再重新執行就可以了. 我在這邊卡超久 (=‵′=)</p></li>
</ul>


<h2>申請Github的網址空間</h2>

<p>以上都Run完成之後, 我們要先回到github上面,來創造一個我們要用來存放網誌的容器(repository)</p>

<p>在此之前, 我先說明一下網誌的網址, 使用octopress在github上建立網誌(Blog)的時候, github會默認我們的網誌的網址(address)為 <code>YourName.github.io</code></p>

<p>舉例來說, 我在github上面的帳號是kennytu, 那麼我的Blog的URL網址就是 <code>kennytu.github.io</code></p>

<p>OK, 回到github上, 我們執行以下步驟</p>

<ol>
<li>在Github上Create一個容器,名為YourName.github.com, for example: kennytu.github.com</li>
<li>點一下SSH clone URL, 把SSH URL記錄起來, 晚一點要讓octopress使用</li>
</ol>


<blockquote><p>上述的第2步驟, 是要在第1步驟創建完成之後, 再點選進去你新的容器, 就會在右下方看到SSH clone URL的小按鈕</p></blockquote>

<p>以上, 就完成了github的容器創建, 其實滿容易的, 剩餘的就是多K一下git的基本知識. git的進階用法太多了, 是要努力學習一下</p>

<h2>將Octopress的一些範本資料, 同步到我們剛剛申請的github容器裡</h2>

<p>一樣在剛剛的目錄, 我們先輸入底下指令</p>

<pre><code>D:\kenny_blog\octopress&gt;rake setup_github_pages
</code></pre>

<p>此時CMD會跳出要我們輸入github的repository, 我們就把剛剛從SSH clone URL複製的URL貼過來</p>

<p>在這邊的範例就是 <code>git@github.com:kennytu/kennytu.github.com.git</code></p>

<p>完成之後, octopress就會開始執行一些初始化作業, 接著執行</p>

<pre><code>D:\kenny_blog\octopress&gt;rake generate
D:\kenny_blog\octopress&gt;rake deploy
</code></pre>

<p>基本上, 到這邊為止, 我們已經完成了大部份的設定了.</p>

<p>作完deply之後, 我們可以到github的網頁, 去看看我們剛剛創建的repository, 在這邊是<code>kennytu.github.io</code></p>

<p>會看到如下的畫面</p>

<p><span class='caption-wrapper'><img class='caption' src='http://kennytu.github.io/images/cotopress_install/github_octopress.png' width='' height='' title=''><span class='caption-text'></span></span></p>

<p>我們發現到在這個repo(repository的縮寫)底下有兩個branch:</p>

<p>一個是source</p>

<p>另一個是master</p>

<p>這兩的branch在底下要稍微介紹一下</p>

<h3>Octopress對於branch的管理</h3>

<p>在這一節的開始, 我來說明一下octopress目錄下的git branch</p>

<p>請在安裝路徑, 我這邊的話就是D:\kenny_blog, 輸入以下指令</p>

<pre><code>D:\kenny_blog\octopress&gt;git branch
* source

D:\kenny_blog\\octopress&gt;cd _deploy

D:\kenny_blog\octopress\_deploy&gt;git branch
* master
</code></pre>

<p>當我們使用octopress撰寫Blog的時候, 我們是對source的這個branch作修改, octopress基本上不會對這個source brunch作任何動作, 也就是說, 我們要自己使用git來維護這個source (當然,剛開始是octopress幫我們創建這個source branch的)</p>

<p>在寫完網誌(用我滿喜歡的Markdown語法)之後, 我們使用<code>rake generate</code>來產生靜態網頁, 這時候octopress會將靜態網頁放在<code>_deploy</code>這個目錄下, 而這個目錄是branch master的範圍, 接著, 當我們使用<code>rake deploy</code>,將_deploy底下的所有檔案佈署到遠端repo的時候,它是佈署到origin master這個branch去的(octopress會自動用git幫我們佈署). 最後, 我們的github.io的Blog, 是以master這個branch,作為網站資料的來源來顯示</p>

<p>ok, 所以說, source資料夾裡面所更改的任何code, 我們都要自己透過底下指令</p>

<pre><code>git add .
git commit .  
git push origin source
</code></pre>

<p>PS. commit的時候可以用 <code>git commit . -m "message"</code> (跳過開啟應用程式要寫comment的步驟)</p>

<p>當我們在source資料夾, 使用git push origin source的時候, 並不會將底下的_deploy的資料夾一起push上去,這是因為octopres有幫我們做了一些設定, 以區別master和source的更改</p>

<p>OK, 講到這邊, 希望有個基本的理解了</p>

<p>接下來要介紹如何寫文章</p>

<h2>創建新的文章, Preview以及Deploy</h2>

<p>在source的branch下, 執行</p>

<pre><code>rake new_post['文章標題']
</code></pre>

<p>例如,
    D:\kenny_blog\octopress>\rake new_post[&lsquo;my_initial_page&rsquo;]</p>

<p>此時octopress會在source的目錄下創建一個<code>2015-11-11-init-blog.markdown</code>檔案</p>

<p>以我的例子來說, 也就是在<code>D:\kenny_blog\octopress\source\_posts</code>裡面</p>

<p>使用 rake new_post語法的時候, 不能使用中文來當標題, 會發生錯誤. 你可以先用英文創建, 然後再進去檔案裡面修改你要的標題即可</p>

<p>編輯完檔案, 執行</p>

<pre><code>rake generate
</code></pre>

<p>octopress就會開始作處理, 並且把相對應的修改部份轉換到_deploy資料夾</p>

<p>接著, 可以執行preview</p>

<pre><code>rake preview
</code></pre>

<p>這樣octopress會開出一個localhost:4000的來給你預覽</p>

<p>最後, 作deploy</p>

<pre><code>rake deploy
</code></pre>

<p>將_deploy底下的靜態網頁同步到github上面</p>

<p>如此, 我們直接可以開瀏覽器, 輸入<code>http://kennytu.github.io</code>作線上瀏覽了</p>

<p>最後, 最重要的步驟, 就是將你在source branch修改的部分也同步到github上面</p>

<pre><code>git add . (如果有新的檔案)
git commit . 
git push origin source
</code></pre>

<p>OK, 完成</p>

<p>本篇的安裝經驗到這邊, 謝謝大家 (￣︶￣)&amp;gt</p>
]]></content>
  </entry>
  
</feed>
