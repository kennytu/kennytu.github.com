<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Sails | 江湖險惡，我從來都不輕易留下我的姓名。]]></title>
  <link href="http://kennytu.github.io/blog/categories/sails/atom.xml" rel="self"/>
  <link href="http://kennytu.github.io/"/>
  <updated>2015-11-16T21:29:36+08:00</updated>
  <id>http://kennytu.github.io/</id>
  <author>
    <name><![CDATA[Kenny Tu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Sails練習之一]]></title>
    <link href="http://kennytu.github.io/blog/2015/11/16/sails-study01/"/>
    <updated>2015-11-16T11:29:18+08:00</updated>
    <id>http://kennytu.github.io/blog/2015/11/16/sails-study01</id>
    <content type="html"><![CDATA[<p>這一系列的文章, 出自於youtube上的Building a Sails Application教學.</p>

<p>這位仁兄的一系列教學文章都寫得非常好</p>

<p>他的網址在<a href="https://www.youtube.com/watch?v=ep6EQ5f82Ts&index=2&list=PLWsZeJCry-F4K4iRImeB3-i0S5mw9Ak-W" target="_blank">這邊</a></p>

<p>底下分別是他的各個教學章節, 我只是用文字來記錄我的學習過程</p>

<!--more-->


<h2>Building a Sails Application: Ep1 - Installing Sails and Create Initial Project</h2>

<p>OK, 這個章節主要就是教安裝, 你要先安裝好<code>npm</code>, 接下來都好辦了</p>

<p>安裝sails</p>

<p><code>npm install -g sails</code></p>

<p>指令一下去就裝好了. -g是代表安裝到大家都可以存取到的目錄, npm的共用目錄是放在<code>C:\Users\KennyTu\AppData\Roaming\npm</code></p>

<p>你可以用npm config get prefix來取得global的目錄</p>

<p><code>E:\sails_app&gt;npm config get prefix</code></p>

<p>安裝好sails之後, 就可以用sails來create project</p>

<pre><code class="batch">    E:\sails_app&gt;sails new activeityOverload --linker
    info: Created a new Sails app `activeityOverload`!
</code></pre>

<p><code>--linker</code> 的意思是在傳輸的過程啟動壓縮功能, 先讓資料變小, 然後傳輸, 節省網路開銷</p>

<p><strong>但在0.10版本之後, sails就捨棄了linker, 要注意一下</strong></p>

<p>詳情請參考<a href="http://stackoverflow.com/questions/22042260/sails-js-v0-10-create-new-project-linker-not-working-gruntfile-js-not-used" target="_blank">這裡</a></p>

<p>接著啟動sails的serve來看結果
<code>batch
E:\sails_app&gt;cd activeityOverload
E:\sails_app\activeityOverload&gt;sails lift
</code></p>

<pre><code class="batch">info: Starting app...

info:
info:                .-..-.
info:
info:    Sails              &lt;|    .-..-.
info:    v0.11.2             |\
info:                       /|.\
info:                      / || \
info:                    ,'  |'  \
info:                 .-'.-==|/_--'
info:                 `--'-------'
info:    __---___--___---___--___---___--___
info:  ____---___--___---___--___---___--___-__
info:
info: Server lifted in `E:\sails_app\activeityOverload`
info: To see your app, visit http://localhost:1337
info: To shut down Sails, press &lt;CTRL&gt; + C at any time.

debug: --------------------------------------------------------
debug: :: Mon Nov 16 2015 15:24:06 GMT+0800 (台北標準時間)

debug: Environment : development
debug: Port        : 1337
debug: --------------------------------------------------------
</code></pre>

<p>看到以上的訊息之後, 就可以到瀏覽器中輸入 <code>http://localhost:1337</code></p>

<p>就可以看到網頁啦!</p>

<p>好~ 第一課就是這樣囉, 結束</p>

<p>底下是第二課</p>

<h2>Building a Sails Application: Ep2 - Creating a sign-up page, adding twitter bootstrap</h2>

<p>進入到我們剛剛create的資料夾, 也就是activeityOverload, 我們會看到幾個資料夾和檔案</p>

<p>我們先專注在 <code>config/routes.js</code></p>

<p>這個檔案決定使用者個要求如何導向我們設定的資源</p>

<p>詳細的介紹在<a href="http://sailsjs.org/#!/documentation/concepts/Routes/RouteTargetSyntax.html" target="_blank">這邊</a></p>

<p>主要是這個結構</p>

<pre><code class="js">module.exports.routes = {

  '/': {
    view: 'homepage'
  }

};
</code></pre>

<p>這個是說, 根目錄的頁面是呈現主要是view的hompage檔案</p>

<p>所以我們可以在views的目錄下找到homepage.ejs</p>

<p>EJS 是一個 client 端的 JavaScript template library，可以讓整個網頁程式碼結構更清楚、更整潔。有興趣的人可以參考<a href="http://blogger.gtwang.org/2014/02/ejs-embedded-javascript.html" target="_blank">這裡</a></p>

<p>現在呢, 我們要做以下事情</p>

<ol>
<li>在views下create一個資料夾static</li>
<li>在static資料夾下新增index.ejs</li>
</ol>


<p>在index.ejs新增</p>

<p>```html</p>

<h1> this is our homepage </h1>


<pre><code>
回到`config/routes.js` 修改我們的首頁的目錄, 如下
</code></pre>

<p>module.exports.routes = {</p>

<p>  &lsquo;/&rsquo;: {
    view: &lsquo;static/index&rsquo;
  }</p>

<p>};
```</p>

<p>修改完成, 重新啟動sails,</p>

<p><code>sails lift</code></p>

<p>然後到瀏覽器(在這邊我用Firefox)就可以看到結果</p>

<p>在這邊用瀏覽器的觀看原始碼功能, 會看到source code多了很多東西出來</p>

<p>這是因為sails會用layout.ejs (在views底下)</p>

<p>重新幫我們產生出一個頁面出來</p>

<p>為了實驗一下layout.ejs, 我們來修改一下內容</p>

<p>在layout.ejs檔案中, 大約31行開始</p>

<pre><code class="html">    &lt;!--STYLES--&gt;
    &lt;link rel="stylesheet" href="http://kennytu.github.io/styles/bootstrap.css"&gt;
    &lt;link rel="stylesheet" href="http://kennytu.github.io/styles/importer.css"&gt;
    &lt;!--STYLES END--&gt;
</code></pre>

<p>上面那個<code>bootstrap.css</code>是我加的</p>

<p>目的是在於, 我們改用<code>bootstrap.css</code>來重新render(渲染)我們的html元素</p>

<p>也就是我們的<code>index.ejs</code>當中的<code>h2</code>的元素, 會被<code>layout.ejs</code>用<code>bootstrap.css</code>來重新渲染</p>

<p>底下是作法</p>

<ol>
<li>去下載bootstrap, 最新的是bootstrap-3.3.5-dist.zip, 裡面有js, css, fonts</li>
<li>把css下面的bootstrap.css copy 到 sails app 目錄下的 <code>activeityOverload\assets\styles</code></li>
<li>到layout.ejs去新增 styles, 就如同上面的layout.ejs的範例一樣</li>
</ol>


<p>接著就是重新啟動sails, 你會看到首頁的字型變得不太一樣了</p>

<p>在這邊要提到一個目錄, 也就是assets, assets中文是資源的意思, 意思就是你create的任何files都可以放在這個資料夾啦!</p>

<p>當我們把files放到這個assets的目錄時, sails會在啟動的時候, 將底下的檔案copy到要發行的另外一個目錄, 在這邊是<code>.tmp\public\styles</code></p>

<p>OK, 接下來作者就要再次修改主頁了, 修改之前, 他shows出了Gruntfile.js,</p>

<p>看到這邊出現了一個不熟悉的東西, 就上網google了一下</p>

<p>原來grunt是一個前端的建構工具, 他很像C的Make, Java的Ant, Ruby的Rake&hellip;</p>

<p>在前端和Node.js的開發環境中, 就是使用grunt來建置</p>

<p>Grunt是一個Task Runner，常用來執行 JS/CSS 打包壓縮、SASS/LESS/CoffeeScript 編譯、單元測試… 等工作，常被拿來當成前端開發自動化的引擎。</p>

<p>上網study了一下, 發現(2015年)出現了一個比Grunt更好用的Tool, 叫作Gulp</p>

<p>可能作者在出這個教學影片的時候, 還沒有Gulp, 所以就用了Grunt.</p>

<p>但既然已經有了Gulp, 我就來用Gulp來取代Grunt吧(以後啦!)</p>

<p>Sails的官網有教學, 如何把Grunt給DISABLE掉&hellip;請參考<a href="http://sailsjs.org/documentation/concepts/assets/disabling-grunt" target="_blank">官方網站</a></p>

<p>一些gulp的教學文件我列在底下</p>

<p><a href="http://www.oxxostudio.tw/articles/201503/gulp-install-webserver.html" target="_blank">Gulp 學習 1</a></p>

<p><a href="http://www.jianshu.com/p/3779f708f5d7" target="_blank">Gulp 挑戰 Grunt，背後的哲學 </a></p>

<p><a href="http://blog.darkthread.net/post-2014-09-25-gulp-grunt-bower-npm.aspx" target="_blank">Gulp, Grunt, Bower 以及 npm</a></p>

<p><a href="http://koanda.de/blog/53b9a67acba90doc1636380824-How-to-disable-Grunt-in-Sails-js" target="_blank">How to disable Grunt in Sails.js</a></p>

<p>好, 現在繼續, 在這邊有個小插曲</p>

<p>作者忘記把JQuery以及一些相關的檔案加進來, 他額外寫了一個blog, 參考
<a href="https://www.youtube.com/watch?v=zootilxmo4M" target="_blank">Building a Sails Application: Ep2a - adding jquery, custom.less, minor footer changes</a></p>

<p>底下是步驟</p>

<ol>
<li>先把JQuery下載下來, 我下載的是<a href="http://jquery.com/download/" target="_blank">The compressed, production jQuery 2.1.4</a></li>
<li>把jquery-2.1.4.min.js 改名成jquery.js, 放到assets\js\dependencies底下</li>
<li>到task\底下,找到<code>pipeline.js</code> (新的Sails把Grunt關於inject的部份放到tasks裡面的<code>pipeline.js</code>), 參考<a href="http://sailsjs.org/documentation/concepts/assets/task-automation" target="_blank">這裡</a></li>
<li>本來我們要把jquery放到pipeline.js, 結果發現pipeline.js已經幫我們處理好了</li>
</ol>


<p>從程式碼當中可以看到</p>

<pre><code class="javascript">// Client-side javascript files to inject in order
// (uses Grunt-style wildcard/glob/splat expressions)
var jsFilesToInject = [

  // Load sails.io before everything else
  'js/dependencies/sails.io.js',

  // Dependencies like jQuery, or Angular are brought in here
  'js/dependencies/**/*.js',

  // All of the rest of your client-side js files
  // will be injected here in no particular order.
  'js/**/*.js',

  // Use the "exclude" operator to ignore files
  // '!js/ignore/these/files/*.js'
];
</code></pre>

<p>OK, 所以我們就不用修改, 把jquery放到正確的目錄就好</p>

<p>接著新增<code>custom.less</code>
參考下面的內容, 放到<code>assets\styles</code>中</p>

<pre><code class="css">body {
  padding-top: 60px;
  padding-bottom: 40px;
}

.jumbotron {
  text-align: center;
}

.jumbotron h2 {
  font-size: 1.5em;
  letter-spacing: -1px;
  margin-bottom: 30px;
  text-align: center;
  font-weight: normal;
  color: gray;
}

.container .gray{
  color: gray
}

.container{
  .footer{
    width: 25%;
  }
}
</code></pre>

<p>接著, 我們修改importer.less, 新增<code>@import 'custom.less';</code> 如下表</p>

<pre><code class="css">// For example:
//
// @import 'variables/colors.less';
// @import 'mixins/foo.less';
// @import 'mixins/bar.less';
// @import 'mixins/baz.less';
//
// @import 'styleguide.less';
// @import 'pages/login.less';
// @import 'pages/signup.less';
//
// etc.

@import 'custom.less';
</code></pre>

<p>PS: 我剛剛把custom.less放到assets\styles中的時候, layout.ejs好像就會幫我把custom.css自動加到STYLE裡面去.. 超強的&hellip; 還是我自己之前有改過我忘記了&hellip; XD</p>

<p>作者有在layout.ejs新增了一些屬性, <code>navbar</code>以及<code>footer</code></p>

<p>相關程式碼我寫在下面</p>

<pre><code class="html">  &lt;div class="navbar navbar-inverse navbar-fixed-top"&gt;
      &lt;div class="container"&gt;
          &lt;a class="navbar-brand" href="http://kennytu.github.io/"&gt; activityOverload&lt;/a&gt;
      &lt;/div&gt;
  &lt;/div&gt;

  &lt;%- body %&gt;

  &lt;div class="container"&gt;
    &lt;hr&gt;
    &lt;footer class="footer pull-right"&gt;
      &lt;div&gt;
        &lt;a href="http://sailsja.com"&gt;sails.js&lt;/a&gt;
        &lt;div&gt;Tutorial by irl nathan...&lt;/div&gt;
      &lt;/div&gt;
    &lt;/footer&gt;
  &lt;/div&gt;
</code></pre>

<p>其中 &lt;%- body %> 上面的code是navbar, 下面的是footer</p>

<p>好的, 總之大功告成啦</p>

<p>現在要回頭修改index.ejs了</p>

<p>內容如下</p>

<p>```html</p>

<div class="container">
  <div class="jumbotron">
    <h1>activityOverload</h1>

    <h2>...tracking app activity better than the NSA since 1899.</h2>
    <div class="text-center">
      <a href="http://kennytu.github.io/user/new" style="text-align:center" class="btn btn-lg btn-success">Sign up now!</a>
    </div>
  </div>
</div>


<p>```</p>

<p>其中如果照著youtube上面寫的, button不會置中, 所以我就加了<code>div class="text-center"</code> 讓button置中, 我們使用的class是bootstrap的class, 請參考<a href="http://stackoverflow.com/questions/22578853/how-to-center-buttons-in-twitter-bootstrap-3" target="_balnk">這裡</a></p>

<p>好, 以上就是教學影片的第一課以及第二課, 附上網址</p>

<ol>
<li><a href="https://www.youtube.com/watch?v=1H0UfbGdwd8&list=PLWsZeJCry-F4K4iRImeB3-i0S5mw9Ak-W&index=1" target="_blank">activityOverlord - An overview of the project</a></li>
<li><a href="https://www.youtube.com/watch?v=ep6EQ5f82Ts&list=PLWsZeJCry-F4K4iRImeB3-i0S5mw9Ak-W&index=2" target="_blank">Building a Sails Application: Ep1 - Installing Sails and Create Initial Project</a></li>
<li><a href="http://irlnathan.github.io/sailscasts/blog/2013/08/22/building-a-sails-application-ep2a-a-quick-supplement-to-some-stuff-i-forgot-to-mention-in-episode-2/" target="_blank">Building a Sails Application: Ep2a - Stuff I Forgot to Mention in Episode two&hellip;because I&rsquo;m Old.</a></li>
<li><a href="https://www.youtube.com/watch?v=ZE7ye2G_H9Q&list=PLWsZeJCry-F4K4iRImeB3-i0S5mw9Ak-W&index=3" target="_blank">Building a Sails Application: Ep2 - Creating a sign-up page, adding twitter bootstrap</a></li>
</ol>

]]></content>
  </entry>
  
</feed>
