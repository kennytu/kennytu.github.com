---
layout: post
title: "Sails練習之七"
date: 2015-11-26 10:34:50 +0800
comments: true
categories: sails
---


本章緊接著前一篇, 我們要來實作Delete的功能

這篇參考此Youtube:<a href="https://www.youtube.com/watch?v=6sIrHPlJJQk" target="_blank">Building a Sails Application: Ep9 - Deleting a user account.</a>

我們到`UserController.js`去新增我們的delete程式碼

```js UserController.js 新增 destroy function

  destroy: function(req, res, next){
    console.log("Hi, destroy");
    User.findOne(req.param('id'), function foundUser(err, user){
      if (err) return next(err);
      if(!user) return next('User doesn\'t exist.');

      User.destroy(req.param('id'), function userDestroyed(err) {
        if(err) return next(err);
      });

      res.redirect('/user');

  });

```

<!--more-->

我們注意到`if(!user) return next('User doesn\'t exist.');`

我們也把這一段敘述加到`edit action`裡面

```js UserController.js 修改 edit action

edit: function(req, res, next){
    console.log("hi, edit!");

    //Find the user from the id passed in via params
    User.findOne(req.param('id'), function foundUser(err, user){
      if(err) return next(err);
      if(!user) return next('User doesn\'t exist.');

      res.view({
        user: user
      });
    });
},

```

然後我們回到`views\user\index.ejs`, 加入以下程式碼

```html views\user\index.ejs 加入destroy (使用POST方法)

<div class="container">
  <h3>Users</h3>
  <table class="table">
    <tr>
      <th>ID</th>
      <th>Name</th>
      <th>Title</th>
      <th>Email</th>
      <th></th>
      <th></th>
      <th></th>
    </tr>

    <% _.each(users, function(user){ %>
    <tr data-id="<%= user.id %>" data-model="user">
      <td><%= user.id %></td>
      <td><%= user.name %></td>
      <td><%= user.title%></td>
      <td><%= user.email%></td>
      <td><a href="/user/show/<%= user.id %>" class="btn btn-sm btn-primary">Show</a></td>
      <td><a href="/user/edit/<%= user.id %>" class="btn btn-sm btn-warning">Edit</a></td>

      <td>
        <form action="/user/destroy/<%= user.id%>" method="POST">
          <input type="hidden" name="_method" value="delete"/>
          <input type="submit" class="btn btn-sm btn-danger" value="Delete"/>
          <input type="hidden" name="_csrf" value="<%= _csrf %>"/>
        </form>
      </td>
    </tr>

    <%}) %>
  </table>
</div>

```

注意到我們對`destroy`使用`POST`方法, 其他的`action`我們是用`GET`方法

由於我們的destroy是用另外一個form, 所以我們要在新增一個hidden的_csrf, 否則我們會沒有辦法access網頁

好, 完成之後, 存檔, 重啟sails

瀏覽器輸入`http://localhost:1337/user`

就可以玩玩看delete的功能了!

